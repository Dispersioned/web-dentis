{"version":3,"file":"component---src-templates-code-of-service-page-code-of-service-page-jsx-9c121c69341660c97f0a.js","mappings":"iNAGMA,GAAOC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,+CAIGC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,gBAACH,EAAD,KAAOG,K,6ECLHC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,gBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,WAAY,IAAKC,MAAO,CAAEC,OAAQ,aACxDL,K,6ECHMM,EAAY,SAAC,GAAc,IAAZN,EAAW,EAAXA,KAC1B,OACE,gBAACC,EAAA,EAAD,CAAYM,UAAU,KAAKL,QAAQ,KAAKE,MAAO,CAAEC,OAAQ,aACtDL,K,iLCKP,IAQaQ,EAA4B,SAAC,GAAc,IAPlDC,EAOsCC,EAAW,EAAXA,KAClCC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MAEnBC,GAVFL,EAAQ,EAEL,WACL,OAAOA,MAST,OACE,gBAACM,EAAA,EAAD,KACE,gBAAC,IAAD,CAAWf,KAAMW,IACjB,gBAAC,IAAD,CAAUX,KAAMY,IACfC,EAAMG,KAAI,SAACC,EAAMR,GAAP,OACT,gBAAC,IAAD,CAAWS,IAAKT,GACd,gBAACR,EAAA,EAAD,CAAYC,QAAQ,MAClB,8BC/BG,SAAkBiB,GAC/B,IAAMC,EAAS,CAAEC,EAAG,IAAMC,GAAI,IAAKC,EAAG,IAAKC,GAAI,IAAKC,EAAG,IAAKC,GAAI,GAAIC,EAAG,GAAIC,GAAI,GAAIC,EAAG,GAAIC,GAAI,EAAGC,EAAG,EAAGC,GAAI,EAAGC,EAAG,GAC7GC,EAAQ,GACZ,IAAK,IAAMC,KAAKf,EACd,KAAOD,GAAOC,EAAOe,IACnBD,GAASC,EACThB,GAAOC,EAAOe,GAGlB,OAAOD,EDsBeE,CAAS3B,EAAQ,GAA7B,KAAoCQ,EAAKN,QAE1CM,EAAKoB,OAAOrB,KAAI,SAACsB,EAAOC,GAAR,OACf,uBAAKrB,IAAKqB,GACR,gBAACtC,EAAA,EAAD,KAAgBa,IAAhB,KAA8BwB,EAAMtC,MACpC,uBAAKI,MAAO,CAAEoC,YAAa,KACxBF,EAAMG,WACLH,EAAMG,UAAUzB,KAAI,SAAC0B,EAAUjC,GAAX,OAClB,gBAACR,EAAA,EAAD,CAAYiB,IAAKT,IEvCGU,EFuCwBV,EAAQ,EErC/DkC,OAAOC,aAAaC,KAAgB1B,GFqCzB,KAA2DuB,EAAS1C,OEvCzE,IAAyBmB,gBFuDxC,EAL0B,SAAC,GAAc,IAAZT,EAAW,EAAXA,KAE3B,OADAoC,QAAQC,IAAIrC,GACL,gBAACF,EAAD,CAA2BE,KAAMA,EAAKsC,eAAeC","sources":["webpack://gatsby-starter-netlify-cms/./src/components/info/parapgraph/Paragraph.jsx","webpack://gatsby-starter-netlify-cms/./src/components/info/subtitle/Subtitle.jsx","webpack://gatsby-starter-netlify-cms/./src/components/ui/page-title/PageTitle.jsx","webpack://gatsby-starter-netlify-cms/./src/templates/code-of-service-page/code-of-service-page.jsx","webpack://gatsby-starter-netlify-cms/./src/services/romanize.js","webpack://gatsby-starter-netlify-cms/./src/services/alphabetRussian.js"],"sourcesContent":["import { styled } from '@mui/material';\nimport React from 'react';\n\nconst Body = styled('div')`\n  margin-top: 1.2rem;\n`;\n\nexport const Paragraph = ({ children }) => {\n  return <Body>{children}</Body>;\n};\n","import { Typography } from '@mui/material';\nimport React from 'react';\n\nexport const Subtitle = ({ text }) => {\n  return (\n    <Typography variant=\"h5\" fontWeight={600} style={{ margin: '1.2rem 0' }}>\n      {text}\n    </Typography>\n  );\n};\n","import { Typography } from '@mui/material';\nimport React from 'react';\n\nexport const PageTitle = ({ text }) => {\n  return (\n    <Typography component=\"h1\" variant=\"h2\" style={{ margin: '1.5rem 0' }}>\n      {text}\n    </Typography>\n  );\n};\n","import { Typography } from '@mui/material';\nimport { graphql } from 'gatsby';\nimport React, { useState } from 'react';\n\nimport { Layout } from '../../components/Layout';\nimport { Paragraph } from '../../components/info/parapgraph';\nimport { Subtitle } from '../../components/info/subtitle';\nimport { PageTitle } from '../../components/ui/page-title';\nimport alphabetRussian from '../../services/alphabetRussian';\nimport romanize from '../../services/romanize';\n\nconst getPointIndex = () => {\n  let index = 1;\n\n  return function () {\n    return index++;\n  };\n};\n\nexport const CodeOfServicePageTemplate = ({ data }) => {\n  const { title, subtitle, terms } = data;\n\n  const counter = getPointIndex();\n\n  return (\n    <Layout>\n      <PageTitle text={title} />\n      <Subtitle text={subtitle} />\n      {terms.map((term, index) => (\n        <Paragraph key={index}>\n          <Typography variant=\"h6\">\n            <strong>{`${romanize(index + 1)}. ${term.title}`}</strong>\n          </Typography>\n          {term.points.map((point, pointIndex) => (\n            <div key={pointIndex}>\n              <Typography>{`${counter()}. ${point.text}`}</Typography>\n              <div style={{ paddingLeft: 15 }}>\n                {point.subpoints &&\n                  point.subpoints.map((subpoint, index) => (\n                    <Typography key={index}>{`${alphabetRussian(index + 1)}) ${subpoint.text}`}</Typography>\n                  ))}\n              </div>\n            </div>\n          ))}\n        </Paragraph>\n      ))}\n    </Layout>\n  );\n};\n\nconst CodeOfServicePage = ({ data }) => {\n  console.log(data);\n  return <CodeOfServicePageTemplate data={data.markdownRemark.frontmatter} />;\n};\n\nexport default CodeOfServicePage;\n\nexport const query = graphql`\n  query CodeOfServicePageQuery {\n    markdownRemark(frontmatter: { templateKey: { eq: \"code-of-service-page\" } }) {\n      frontmatter {\n        title\n        subtitle\n        terms {\n          title\n          points {\n            text\n            subpoints {\n              text\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","export default function romanize(num) {\n  const lookup = { M: 1000, CM: 900, D: 500, CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 };\n  let roman = '';\n  for (const i in lookup) {\n    while (num >= lookup[i]) {\n      roman += i;\n      num -= lookup[i];\n    }\n  }\n  return roman;\n}\n","export default function alphabetRussian(num) {\n  const startCode = 1073; // russian a\n  return String.fromCharCode(startCode - 2 + num);\n}\n"],"names":["Body","styled","Paragraph","children","Subtitle","text","Typography","variant","fontWeight","style","margin","PageTitle","component","CodeOfServicePageTemplate","index","data","title","subtitle","terms","counter","Layout","map","term","key","num","lookup","M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I","roman","i","romanize","points","point","pointIndex","paddingLeft","subpoints","subpoint","String","fromCharCode","startCode","console","log","markdownRemark","frontmatter"],"sourceRoot":""}